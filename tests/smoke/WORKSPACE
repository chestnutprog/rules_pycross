workspace(
    name = "jvolkman_rules_pycross_smoke",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "aspect_bazel_lib",
    sha256 = "ce259cbac2e94a6dff01aff9455dcc844c8af141503b02a09c2642695b7b873e",
    strip_prefix = "bazel-lib-1.37.0",
    url = "https://github.com/aspect-build/bazel-lib/releases/download/v1.37.0/bazel-lib-v1.37.0.tar.gz",
)

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")

aspect_bazel_lib_dependencies()

# CC toolchain

HERMETIC_CC_TOOLCHAIN_VERSION = "v2.1.2"

http_archive(
    name = "hermetic_cc_toolchain",
    sha256 = "28fc71b9b3191c312ee83faa1dc65b38eb70c3a57740368f7e7c7a49bedf3106",
    urls = [
        "https://mirror.bazel.build/github.com/uber/hermetic_cc_toolchain/releases/download/{0}/hermetic_cc_toolchain-{0}.tar.gz".format(HERMETIC_CC_TOOLCHAIN_VERSION),
        "https://github.com/uber/hermetic_cc_toolchain/releases/download/{0}/hermetic_cc_toolchain-{0}.tar.gz".format(HERMETIC_CC_TOOLCHAIN_VERSION),
    ],
)

load(
    "@hermetic_cc_toolchain//toolchain:defs.bzl",
    "URL_FORMAT_NIGHTLY",
    "URL_FORMAT_RELEASE",
    zig_toolchains = "toolchains",
)

zig_version = "0.11.0"

zig_host_platform_sha256 = {
    "linux-aarch64": "956eb095d8ba44ac6ebd27f7c9956e47d92937c103bf754745d0a39cdaa5d4c6",
    "linux-x86_64": "2d00e789fec4f71790a6e7bf83ff91d564943c5ee843c5fd966efc474b423047",
    "macos-aarch64": "c6ebf927bb13a707d74267474a9f553274e64906fd21bf1c75a20bde8cadf7b2",
    "macos-x86_64": "1c1c6b9a906b42baae73656e24e108fd8444bb50b6e8fd03e9e7a3f8b5f05686",
}

zig_toolchains(
    host_platform_sha256 = zig_host_platform_sha256,
    url_formats = [
        URL_FORMAT_RELEASE,
        URL_FORMAT_NIGHTLY,
    ],
    version = zig_version,
)

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.19",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.28",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
)

# Python

http_archive(
    name = "rules_python",
    sha256 = "9d04041ac92a0985e344235f5d946f71ac543f1b1565f2cdbc9a2aaee8adf55b",
    strip_prefix = "rules_python-0.26.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.26.0/rules_python-0.26.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")

py_repositories()

python_register_toolchains(
    name = "python3",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.11.6",
)

load("@python3//:defs.bzl", "interpreter")

# Third-party deps

load("//third_party:repositories.bzl", third_party_repositories = "repositories")
third_party_repositories()

# Pycross

local_repository(
    name = "jvolkman_rules_pycross",
    path = "../..",
)

load("@jvolkman_rules_pycross//pycross:repositories.bzl", "rules_pycross_dependencies")

rules_pycross_dependencies(python_interpreter_target = interpreter)

register_toolchains(
    "//:pycross_darwin_linux_tc",
    "//:pycross_linux_darwin_tc",
    "//:pycross_linux_x86_64_linux_arm64_tc",
)

load("@jvolkman_rules_pycross//pycross:defs.bzl", "pycross_lock_repo")

pycross_lock_repo(
    name = "poetry_lock_repo",
    lock_file = "//poetry:lock.bzl",
)
load("@poetry_lock_repo//:requirements.bzl", poetry_install_deps = "install_deps")
poetry_install_deps()

pycross_lock_repo(
    name = "pdm_lock_repo",
    lock_file = "//pdm:lock.bzl",
)
load("@pdm_lock_repo//:requirements.bzl", pdm_install_deps = "install_deps")
pdm_install_deps()
